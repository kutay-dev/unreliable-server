// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  GOD
}

enum ChatType {
  PUBLIC
  PRIVATE
}

model User {
  id        Int          @id @default(autoincrement())
  username  String       @unique
  password  String
  role      Role         @default(USER)
  messages  Message[]
  members   ChatMember[]
  createdAt DateTime     @default(now())

  @@map("users")
}

model Chat {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  type     ChatType     @default(PRIVATE)
  password String?
  messages Message[]
  members  ChatMember[]

  @@map("chats")
}

model ChatMember {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  chat     Chat     @relation(fields: [chatId], references: [id])
  chatId   Int
  joinedAt DateTime @default(now())

  @@unique([userId, chatId])
  @@map("chat_members")
}

model Message {
  id        Int      @id @default(autoincrement())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  text      String
  createdAt DateTime @default(now())

  @@map("messages")
}
